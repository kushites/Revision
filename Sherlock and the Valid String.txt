import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'isValid' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static String isValid(String s) {
    // Write your code here
    HashMap<Character, Integer> hmap = new HashMap<Character, Integer>();
    for(int i=0; i<s.length(); i++){
        if(hmap.containsKey(s.charAt(i))){
             int x = hmap.get(s.charAt(i));
             x++;
             hmap.put(s.charAt(i),x);
        }
        else{
            hmap.put(s.charAt(i),1);
        }
    }
        HashMap<Integer, Integer> count = new HashMap<>();
        for(int val : hmap.values()){
          if(count.containsKey(val)){
              int x = count.get(val);
              x++;
              count.put(val, x);
          }
          else{
              count.put(val, 1);
          }
        }
      
        System.out.println(count);
        if(count.size()==2){
            boolean flag = false;
            int [] arr = new int[2];
            int [] arr1 = new int[2];
            int c=0;
            for(Map.Entry<Integer, Integer> entry: count.entrySet()){
                arr[c]=entry.getKey();
                if(entry.getValue()==1){
                    flag = true;
                }
                arr1[c]=entry.getValue();
                c++;
            }
            if((arr[0]==1&&arr1[0]==1)||(arr[1]==1&&arr1[1]==1)){
                return "YES";
            }
            
            if( ((Math.abs(arr[0]-arr[1])==1)&&flag == true)){
               return "YES";
            }
        }
// System.out.println(count);
        if(count.size()==1){
            return "YES";
        }
        return "NO";
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String result = Result.isValid(s);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
