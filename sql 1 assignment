CREATE TABLE Manufacturers (
  Code INTEGER,
  Name VARCHAR(255) NOT NULL,
  PRIMARY KEY (Code)   
);

CREATE TABLE Products (
  Code INTEGER,
  Name VARCHAR(255) NOT NULL ,
  Price DECIMAL NOT NULL ,
  Manufacturer INTEGER NOT NULL,
  PRIMARY KEY (Code), 
  FOREIGN KEY (Manufacturer) REFERENCES Manufacturers(Code)
);

INSERT INTO Manufacturers(Code,Name) VALUES(1,'Sony');
INSERT INTO Manufacturers(Code,Name) VALUES(2,'Creative Labs');
INSERT INTO Manufacturers(Code,Name) VALUES(3,'Hewlett-Packard');
INSERT INTO Manufacturers(Code,Name) VALUES(4,'Iomega');
INSERT INTO Manufacturers(Code,Name) VALUES(5,'Fujitsu');
INSERT INTO Manufacturers(Code,Name) VALUES(6,'Winchester');

INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(1,'Hard drive',240,5);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(2,'Memory',120,6);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(3,'ZIP drive',150,4);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(4,'Floppy disk',5,6);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(5,'Monitor',240,1);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(6,'DVD drive',180,2);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(7,'CD drive',90,2);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(8,'Printer',270,3);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(9,'Toner cartridge',66,3);
INSERT INTO Products(Code,Name,Price,Manufacturer) VALUES(10,'DVD burner',180,2);

1. Select the names of all the products in the store.
Ans:1.select name from Products;

2. Select the names and the prices of all the products in the store.
Ans:2 select name,price from Products;

3. Select the name of the products with a price less than or equal to $200.
Ans:3 select name from Products where price<200;

4. Select all the products with a price between $60 and $120.
Ans4: select * from Products where price<120 AND price>60;

5. Select the name and price in cents (i.e., the price must be multiplied by 100).
Ans5: select name,price*100 price from Products ;

6. Compute the average price of all the products.
Ans6: select avg(price) avg_price_of_all from Products ;

7. Compute the average price of all products with manufacturer code equal to 2.
Ans7: select avg(price) avg_price_of_code2 from Products where code=2;

8. Compute the number of products with a price larger than or equal to $180.
Ans8: select count(*) number_of_product from Products where price>=180;

9. Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in 	descending order), and then by name (in ascending order).
Ans9: select name,price number_of_product from Products WHERE price>=180 ORDER by price DESC,name ASC;

10. Select all the data from the products, including all the data for each product's manufacturer.
Ans10: select a.*, b.* from products a join Manufacturers b on(a.manufacturer = b.code);

11. Select the product name, price, and manufacturer name of all the products.
Ans11: select a.name,a.price, b.name from products a join Manufacturers b on(a.manufacturer = b.code);

12. Select the average price of each manufacturer's products, showing only the manufacturer's code.
Ans12: select avg(Products.price), Manufacturers.code from Products JOIN Manufacturers on Products.manufacturer=Manufacturers.code GROUP by Manufacturers.code;

13. Select the average price of each manufacturer's products, showing the manufacturer's name.
Ans13: select avg(Products.price), Manufacturers.name from Products JOIN Manufacturers on Products.manufacturer=Manufacturers.code GROUP by Manufacturers.code;

14. Select the names of manufacturer whose products have an average price larger than or equal to $150.
Ans14: select avg(Products.price), Manufacturers.name from Products JOIN Manufacturers on Products.manufacturer=Manufacturers.code GROUP by Manufacturers.code HAVING  avg(Products.price)>=150 ;

15. Select the name and price of the cheapest product.
Ans15: select name,price from Products where price=(select MIN(price) from Products);

16. Select the name of each manufacturer along with the name and price of its most expensive product.
Ans16: select max_price_mapping.name as manu_name, max_price_mapping.price, products_with_manu_name.name as product_name
from 
    (SELECT Manufacturers.Name, MAX(Price) price
     FROM Products, Manufacturers
     WHERE Manufacturer = Manufacturers.Code
     GROUP BY Manufacturers.Name)
     as max_price_mapping
   left join
     (select products.*, manufacturers.name manu_name
      from products join manufacturers
      on (products.manufacturer = manufacturers.code))
      as products_with_manu_name
 on
   (max_price_mapping.name = products_with_manu_name.manu_name
    and
    max_price_mapping.price = products_with_manu_name.price);
