import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'insertionSort1' function below.
     *
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER_ARRAY arr
     */

    public static void insertionSort1(int n, List<Integer> arr) {
    // Write your code here
    for(int i=1; i<arr.size(); i++){
        int j=i;
        int t=0;
        while((j>0 && arr.get(j-1)>arr.get(j))||(j>0 &&t!=0)){
            if(arr.get(j-1)>arr.get(j)){
             t = arr.get(j);
            }
             if(t>arr.get(j-1)){
               
                arr.set(j, t);
                
                t=0;
            }
            else{
            arr.set(j, arr.get(j-1));
            }
            
            for(int e: arr){
                System.out.print(e+" ");
            }
            System.out.println();
            j=j-1;
           
           
        }
        if(t!=0){
            arr.set(0,t);
            t=0;
            for(int e: arr){
                System.out.print(e+" ");
            }
            System.out.println();
        }
    }
 
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.insertionSort1(n, arr);

        bufferedReader.close();
    }
}
