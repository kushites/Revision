import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'makingAnagrams' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. STRING s1
     *  2. STRING s2
     */

    public static int makingAnagrams(String s1, String s2) {
    // Write your code here
        HashMap<Character, Integer> mp1 = new HashMap<>();
        for(int i=0; i<s1.length(); i++){
            if(mp1.containsKey(s1.charAt(i))){
                int x = mp1.get(s1.charAt(i));
                x++;
                mp1.put(s1.charAt(i), x);
            }
            else{
                mp1.put(s1.charAt(i), 1);
            }
        }
        
        HashMap<Character, Integer> mp2 = new HashMap<>();
        for(int i=0; i<s2.length(); i++){
            if(mp2.containsKey(s2.charAt(i))){
                int x = mp2.get(s2.charAt(i));
                x++;
                mp2.put(s2.charAt(i), x);
            }
            else{
                mp2.put(s2.charAt(i), 1);
            }
        }
        int c=0;
        for(Map.Entry<Character, Integer> entry : mp2.entrySet()){
            if(mp1.containsKey(entry.getKey())){
                if(mp1.get(entry.getKey())>=entry.getValue()){
                    c+=entry.getValue();
                }
                else{
                    c+=mp1.get(entry.getKey());
                }
            }
        }
       
        return s1.length()+s2.length()-2*c;

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s1 = bufferedReader.readLine();

        String s2 = bufferedReader.readLine();

        int result = Result.makingAnagrams(s1, s2);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
