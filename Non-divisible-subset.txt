import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'nonDivisibleSubset' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER k
     *  2. INTEGER_ARRAY s
     */

    public static int nonDivisibleSubset(long k, List<Long> s) {
    // Write your code here
    //   HashSet<Long> h = new HashSet<>();
    //   h.addAll(s);
    //   s=new ArrayList<>();
    //   s.addAll(h);
       long max = 0;
       long [] arr = new long [(int)k];
       for(int t=0; t<s.size(); t++){
          long x = s.get(t)%k;
           arr[(int)x]++;
           
       }
       System.out.println(Arrays.toString(arr));
       if(arr[0]>0){
           max++;
       }
      for(int i=1; i<(arr.length+1)/2; i++){
         if(arr[i]>arr[(int)k-i]){
             max+=arr[i];
         }
         else{
             max+=arr[(int)k-i];
         }
        
        if(i+i==k){
            max++;
        }
      }
      
      int e = (int)k;
   if(arr[e/2]>0 &&e%2==0){
       max++;
   }
      
       return (int)max;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int n = Integer.parseInt(firstMultipleInput[0]);

        long k = Long.parseLong(firstMultipleInput[1]);

        List<Long> s = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Long::parseLong)
            .collect(toList());

        int result = Result.nonDivisibleSubset(k, s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
