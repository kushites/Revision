import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'acmTeam' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts STRING_ARRAY topic as parameter.
     */

    public static List<Integer> acmTeam(List<String> topic) {
    // Write your code here
    int max =0;
        for(String num : topic){
            for(String num1: topic){
                int c=0;
                if(!num.equals(num1)){
                for(int j=0; j<num.length(); j++){
                    if(num.charAt(j)=='1'||num1.charAt(j)=='1'){
                        c++;
                    }
                }
                if(max<c){
                    max=c;
                }
            }
            }
        }
        int team=0;
        for(String num : topic){
            for(String num1: topic){
                int c=0;
                if(!num.equals(num1)){
                for(int j=0; j<num.length(); j++){
                    if(num.charAt(j)=='1'||num1.charAt(j)=='1'){
                        c++;
                    }
                }
                if(max==c){
                    System.out.println(num+" "+num1);
                    team++;
                }
            }
            }
        }
        List<Integer> ans = new ArrayList<>();
        ans.add(max);
        ans.add(team/2);
        return ans;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int n = Integer.parseInt(firstMultipleInput[0]);

        int m = Integer.parseInt(firstMultipleInput[1]);

        List<String> topic = IntStream.range(0, n).mapToObj(i -> {
            try {
                return bufferedReader.readLine();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        })
            .collect(toList());

        List<Integer> result = Result.acmTeam(topic);

        bufferedWriter.write(
            result.stream()
                .map(Object::toString)
                .collect(joining("\n"))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}
