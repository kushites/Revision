import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'happyLadybugs' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING b as parameter.
     */

    public static String happyLadybugs(String b) {
    HashMap<String, Integer> hmap = new HashMap<>();
    boolean v = false;
    String [] color = b.split("");
    for(int i=0; i<color.length; i++){
        if(!color[i].equals("_")){
            if(hmap.containsKey(color[i])){
            int x = hmap.get(color[i]);
            x++;
            hmap.put(color[i], x);
        }
        else{
            hmap.put(color[i],1);
        }
        }
        else{
            v=true;
        }
    }
    if(v==false){
        for(int i=1; i<color.length-1; i++){
            if(!color[i-1].equals(color[i])&&!color[i].equals(color[i+1])){
                return "NO";
            }
        }
    }
    for(Map.Entry<String, Integer> s: hmap.entrySet()){
        if(s.getValue()==1){
            return "NO";
        }
    }
    
    return "YES";
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int g = Integer.parseInt(bufferedReader.readLine().trim());

        IntStream.range(0, g).forEach(gItr -> {
            try {
                int n = Integer.parseInt(bufferedReader.readLine().trim());

                String b = bufferedReader.readLine();

                String result = Result.happyLadybugs(b);

                bufferedWriter.write(result);
                bufferedWriter.newLine();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();
        bufferedWriter.close();
    }
}
