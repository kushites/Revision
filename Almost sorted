import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'almostSorted' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void almostSorted(List<Integer> arr) {
        boolean first = true;
        boolean second=true;
        int firstv=0;
        int secondv=0;
        int swapv=0;
        int c=0;
        for(int i=1; i<arr.size(); i++){
            if(first==true&&arr.get(i-1)>arr.get(i)){
                firstv=i;
                first=false;
            }
            if(second==true&&first==false&&arr.get(i-1)<arr.get(i)){
                secondv=i;
                second=false;
            }
           if(arr.get(i-1)>arr.get(i)){
               c++;
              swapv=i+1;
           }
           
           
        }
        if(first==false&&second==true){
            secondv=arr.size();
        }
      
        int s = firstv-1;
        int e = secondv-1;
        while(s<e&&c!=2){
            int t = arr.get(s);
            arr.set(s, arr.get(e));
            arr.set(e, t);
            s++;
            e--;
          
        }
       
        if(c==2){
            int t = arr.get(s);
            arr.set(s, arr.get(swapv-1));
            arr.set(swapv-1, t);
        }
        
        for(int i=1; i<arr.size(); i++){
            if(arr.get(i-1)>arr.get(i)){
                System.out.println("no");
                return;
            }
        }
        if(c==2){
            System.out.println("yes");
            System.out.println("swap "+firstv+" "+swapv );
        }
        else if(c==1){
            System.out.println("yes");
            System.out.println("swap "+firstv+" "+secondv);
        }
        else{
            System.out.println("yes");
            System.out.println("reverse "+firstv+" "+secondv);
        }
        
       

    }
    

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.almostSorted(arr);

        bufferedReader.close();
    }
}
